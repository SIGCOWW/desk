- alpine:3.7
- env: LANG=ja_JP.UTF-8
- env: PATH=$PATH:/usr/local/texlive/2018/bin/x86_64-linuxmusl


# Core
- apk: git
- dev: perl
- dev: wget
- dev: xz
- dev: ca-certificates
- dev: coreutils
- apk: fontconfig
- apk: ghostscript
- apk: imagemagick
- apk: poppler-utils
- dev: binutils
- dev: findutils
- apk: libc6-compat
- run: 'wget -q http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz'
- run: 'tar zxf install-tl-unx.tar.gz'
- copy: texlive.profile
- run: './install-tl-*/install-tl -profile texlive.profile'
- copy: jumoline.sty
- run: 'mv jumoline.sty $(kpsewhich -var-value TEXMFLOCAL)/tex/latex/local/'
- run: 'mkdir -p $(kpsewhich -var-value TEXMFLOCAL)/fonts/opentype'
- run: 'wget -q "https://github.com/adobe-fonts/source-han-sans/blob/release/OTF/Japanese/SourceHanSans-Medium.otf?raw=true" -O SourceHanSans-Medium.otf'
- run: 'wget -q "https://github.com/adobe-fonts/source-han-sans/blob/release/OTF/Japanese/SourceHanSans-Bold.otf?raw=true" -O SourceHanSans-Bold.otf'
- run: 'wget -q "https://github.com/adobe-fonts/source-han-sans/raw/master/LICENSE.txt" -O SourceHanSans-LICENSE.txt'
- run: 'wget -q "https://github.com/adobe-fonts/source-han-serif/blob/release/OTF/Japanese/SourceHanSerif-Regular.otf?raw=true" -O SourceHanSerif-Regular.otf'
- run: 'wget -q "https://github.com/adobe-fonts/source-han-serif/raw/master/LICENSE.txt" -O SourceHanSerif-LICENSE.txt'
- run: 'mv SourceHan*.otf SourceHan*.txt $(kpsewhich -var-value TEXMFLOCAL)/fonts/opentype/'
- run: 'mkdir -p $(kpsewhich -var-value TEXMFLOCAL)/fonts/map/dvipdfmx'
- copy: otf-up-source.map
- run: 'mv otf-up-source.map $(kpsewhich -var-value TEXMFLOCAL)/fonts/map/dvipdfmx/'
- run: 'ln -s $(kpsewhich ptex-ipaex.map) $(kpsewhich -var-value TEXMFLOCAL)/fonts/map/dvipdfmx/ptex-source.map'
- run: 'ln -s $(kpsewhich uptex-ipaex.map) $(kpsewhich -var-value TEXMFLOCAL)/fonts/map/dvipdfmx/uptex-source.map'
- run: 'ln -s $(kpsewhich otf-ipaex.map) $(kpsewhich -var-value TEXMFLOCAL)/fonts/map/dvipdfmx/otf-source.map'
- run: 'mktexlsr'
- run: 'kanji-config-updmap-sys source'
- run: 'sed -i "s/^\(  \/\(Courier\|Helvetica\|Times-Roman\|Symbol\) \/.*\)/%\1/" /usr/share/ghostscript/*/Resource/Init/gs_pdfwr.ps'
- run: 'mkdir -p /usr/share/fonts'
- run: 'ln -s $(kpsewhich -var-value TEXMFLOCAL)/fonts/truetype/public/ipaex/ipaexg.ttf /usr/share/fonts/ipaexg.ttf'
- run: 'fc-cache -fv'

- apk: ruby
- apk: zip
- apk: ruby-json
- run: 'gem install review -v 2.5.0 --no-rdoc --no-ri'
- apk: nodejs
- dev: nodejs-npm
- run: 'npm install -g tabooular'
- run: 'npm install -g prh'
- apk: gzip
- run: 'wget -q https://github.com/jgm/pandoc/releases/download/2.1.1/pandoc-2.1.1-1-amd64.deb'
- run: 'ar x pandoc-*.deb'
- run: 'tar Jxf data.tar.xz "./usr/bin/pandoc"'
- run: 'gzexe /usr/bin/pandoc'

- run: 'tlmgr install seqsplit caption bigfoot xcolor framed
    multirow cases pgf ifoddpage jknapltx rsfs pxpgfmark subfig marginfix tcolorbox
    mathtools calrsfs calligra cancel mathcomp doublestroke lm anyfontsize etoolbox
    kastrup ec ucs environ trimspaces palatino helvetic mathpazo pdfpages'
- run: 'wget -q https://github.com/zr-tex8r/BXcoloremoji/archive/v0.5.zip -O BXcoloremoji.zip'
- run: 'unzip -q BXcoloremoji.zip'
- run: 'mkdir -p $(kpsewhich -var-value TEXMFLOCAL)/tex/latex/BXcoloremoji'
- run: 'mv BXcoloremoji*/*.sty $(kpsewhich -var-value TEXMFLOCAL)/tex/latex/BXcoloremoji'
- run: 'mv BXcoloremoji*/LICENSE $(kpsewhich -var-value TEXMFLOCAL)/tex/latex/BXcoloremoji'
- run: 'mv BXcoloremoji*/emoji_images $(kpsewhich -var-value TEXMFLOCAL)/tex/latex/BXcoloremoji'
- run: 'mktexlsr'

- dev: python
- dev: pkgconfig
- dev: cairo-dev
- dev: pango-dev
- dev: make
- dev: g++
- dev: libjpeg-turbo-dev
- run: 'cd /usr/lib/ && npm install canvas && cd /'
- run: 'npm install -g colibrijs'
- env: NODE_PATH=/usr/lib/node_modules
- run: 'wget -q https://github.com/prh/rules/archive/master.zip -O rules.zip'
- run: 'unzip -q rules.zip'
- run: 'mv rules-master/ rules'
- run: 'rm -rf rules.zip'
- run: 'gem install diff-lcs --no-rdoc --no-ri'

# Circle CI
- apk: openssh-client

# Emoji
- run: 'gem install gemoji --no-rdoc --no-ri'

# Cleaning
- dev: 'file'
- run: 'rm -rf $(kpsewhich -var-value TEXMFLOCAL)/install-tl*'
- run: 'rm -rf /install-tl* /texlive.profile'
- run: 'rm -rf /usr/local/texlive/20*/tlpkg/'
- run: 'rm -rf /usr/local/texlive/20*/install-tl'
- run: 'rm -rf /usr/local/texlive/20*/release-texlive.txt'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/fonts/truetype/public/baekmuk/'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/scripts/tlcockpit'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/fonts/truetype/public/ipaex/ipagp.ttf'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/fonts/truetype/public/ipaex/ipamp.ttf'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/fonts/truetype/public/ipaex/ipam.ttf'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/fonts/truetype/public/ipaex/ipag.ttf'
- run: 'cd /usr/local/texlive/20*/texmf-dist/fonts/truetype/public/ipaex/ && rm -f ipaexm.ttf && ln -s ipaexg.ttf ipaexm.ttf && cd /'
- run: 'cd /usr/share/ghostscript/*/Resource/CIDFSubst/ && rm -f DroidSansFallback.ttf && ln -s /usr/share/fonts/ipaexg.ttf DroidSansFallback.ttf && cd /'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/fonts/afm'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/fonts/misc'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/fonts/opentype'
- run: 'rm -rf pandoc-*.deb data.tar.xz debian-binary control.tar.gz'
- run: 'rm -rf BXcoloremoji*'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/fonts/map/dvips'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/fonts/pk/ljfour/public/cm'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/fonts/source'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/dvips/'
- run: 'rm -rf /usr/local/texlive/20*/texmf-dist/fonts/tfm/ptex-fonts/standard/'
- rmrf:
  - '/usr/local/texlive/20*/texmf-dist/'
  - name: '*korea*'
  - name: '*chinese*'
- rmrf:
  - '/usr/local/texlive/20*/texmf-dist/fonts/'
  - name: 'times'
  - name: 'cm-super'
  - name: 'courier'
  - name: 'ncntrsbk'
  - name: 'avantgar'
  - name: 'bookman'
  - name: 'zapfchan'
  - name: 'tex-gyre'
  - name: 'charter'
  - name: 'utopia'
- run: 'rm -rf /usr/share/gtk-doc/'
- run: 'rm -rf /usr/lib/ruby/gems/*/cache/'
- run: 'rm -rf /usr/share/X11 /usr/share/alsa'
- rmrf:
  - '/'
  - name: '*.log'
  - name: '*.html'
  - name: '*.md'
  - name: '*.ini'
  - name: '*.example'
  - name: '*.lua'
  - name: '*.c'
  - name: '*.h'
  - name: '*.ins'
  - name: '*.gif'
  - name: '*.jpg'
  - name: '*.ico'
  - name: '*.zip'
  - name: '*.exe'
  - name: '*.*gz'
  - name: '*README*'
  - name: '*.py'
  - name: '*.pyc'
  - name: '*hiramin*'
  - name: '*hirakaku*'
  - name: '*hiramaru*'
  - name: '*.svg'
  - name: 'doc'
  - name: '*sample*'
  - name: '*example*'
  - name: '*manual*'
  - name: '*beamer*'
  - name: 'demo'
  - name: 'tests'
  - name: 'source'
  - name: 'lua*tex'
  - name: 'ptex'
  - name: 'uptex'
  - name: 'xe*tex'
  - name: 'images'
  - name: 'VLGothic'
  - name: '*.png'
  - name: '*.lock'
  - name: '*.git'
  - name: 'test.js'
  - name: 'test'
  - name: 'Makefile'
  - name: '*jlreq*'
  - name: '*.pl'
- run: "find / -name '*.pdf' -type f | grep -v BXcoloremoji | xargs rm -rf"
- rmrf:
  - '/usr/local/texlive/'
  - name: '*.ps'
  - name: '*.eps'
- run: "find / -name '*.cls' -type f | grep -v jsbook | grep -v jsarticle | xargs rm -rf"
- run: 'find /usr/ -empty -type d | xargs rm -rf'
- run: 'rm -rf /usr/bin/pandoc~'
- run: 'find / -executable -type f | xargs file | grep "not stripped" | cut -d":" -f1 | xargs strip'
- run: 'rm -rf /root/.ash_history /root/.config /root/.gem /root/.node-gyp /root/.npm /root/.wget-hsts'
- run: 'rm -rf /usr/bin/npm /usr/lib/node_modules/npm'
- run: 'rm -rf /usr/local/texlive/*/bin/x86_64-linuxmusl/*mpost /usr/local/texlive/*/bin/x86_64-linuxmusl/pdf*tex'
- run: 'find / -executable -type f | xargs grep "__rawmemchr" | cut -d":" -f1 | xargs rm -rf'
- run: 'find / -xtype l | grep -v "/proc/" | xargs rm -rf'

# Utility
- run: 'mkdir -p /usr/local/bin'
- copy: '*.rb'
- run: 'mv build.rb /usr/local/bin/'
- copy: 'colorpicker.js'
- run: 'mv colorpicker.js /usr/local/bin/'
- copy: 'pdfcrop.sh'
- run: 'mv pdfcrop.sh /usr/local/bin/'
- run: 'mkdir -p /extensions'
- copy: 'extensions/*.rb'
- copy: 'locale.yml'
- run: 'mv *.rb locale.yml /extensions'
