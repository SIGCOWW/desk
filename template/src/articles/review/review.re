= Re:VIEW（with desk）文法集
@<author>{Re:VIEW (, desk) の文法なら任せろー, 分峰 太郎;twitter:hoge}
//lead{
Re:VIEWの文法、およびlrks/deskで拡張した文法を基本編と応用編に分けて紹介します。
また、開発に役立つ情報も載せます。
これであなたもRe:VIEW（with desk）マスター！
//}

== はじめに
この辺見るといいかも知れません。

* https://github.com/kmuto/review/blob/master/doc/format.ja.md
* https://review-knowledge-ja.readthedocs.io/ja/latest/index.html


== 基本文法
執筆にあたってそこそこ使いそうな文法を紹介します。

=== 見出し・段落
次のとおり、Markdownの@<tt>{#}が@<tt>{=}になった@<fn>{md}感じです。
//emlist{
= 章見出し \chapter{}
== 節見出し \section{}
=== 項見出し \subsection{}
==== 段見出し \subsubsection{}
===== 小段見出し \paragraph{}
//}
//footnote[md][滅多に見ませんが、Markdownでは見出しの後ろに任意個の@<tt>{#}を付与できます。ところがRe:VIEWでは不可なため、単純に記号を置換すると、Syntax Errorになる恐れがあります。]

ここで、章見出しの後に@<b>{リード文}（導入部）を入れるとそれらしくなります。
こんな感じです。
//emlist{
 = 主人がオオアリクイに殺されて1年が過ぎました。
 //lead{
 いきなりのメール失礼します。
 久光さやか、29歳の未亡人です。
 お互いのニーズに合致しそうだと思い、連絡してみました。
 //}
//}

なお、改段落は「1行以上の空行」で行えます。
Markdown、LaTeXなどと同じです。

=== 文字装飾
@<table>{charstyle}に示すとおりです。
//tabooular[charstyle][文字装飾の一覧]{
入力                                | 出力
<===================================|<===================
@<tt>{@}@<tt>{<b>{太字Bold\}}       | @<b>{太字 Bold}
@<tt>{@}@<tt>{<i>{斜体 Italic\}}    | @<i>{斜体 Italic}
@<tt>{@}@<tt>{<tt>{等幅 Teletype\}} | @<tt>{等幅 Teletype}
@<tt>{@}@<tt>{<u>{下線 Underline\}} | @<u>{下線 Underline}
@<tt>{@}@<tt>{<em>{強調 Emphasis\}} | @<em>{強調 Emphasis}
//}

=== 各種箇条書き
他の命令が行頭から開始なのに対し、箇条書きでは行頭に1つ以上の空白@<fn>{space}を入れます。
そして、その後にレベルに応じた@<tt>{*}を置きます。
具体的には次のとおりです。
//emlist{
 * "*"の前に空白が必須
   ** "*"の数でレベルが増える
 * レベルは"*"の数だけで決まる
 ** 行頭に空白さえあれば、それ以外の空白は必須ではない。
//}
//footnote[space][スペース、TABのどちらでも空白とみなされます。]

番号付き箇条書きは、行頭に1つ以上の空白と、「数字.」を入れることによって行えます。
具体的には次のとおりです。
//emlist{
 1. 富士
 2. 鷹
 3. ありがとナスは嫌いなのです
//}
この際の数字は、出力に影響しません。
例えば、「0.」から採番した場合であっても、それとは関係なく「1.」から出力されます。
なお、番号付き箇条書きに対して通常の箇条書きをネストすることはできません。
deskでは、これをMarkdownを経由して解決する手段を提供しています。
続きは後述の「応用編」で。
なお、ここまで「箇条書きの前には空白が必要」と述べましたが、実はdeskを使う限りは謎の処理によって空白が不要となります。

見出し付き箇条書きは、@<tt>{:}で見出し、次の行から中身を記述します。
行頭の空白は不要（有っても構わない）で、具体的には次のとおりです。
//emlist{
 : ミライアカリ
   エイレーンのおてて、薄幸さで人気を博している。
 : 月ノ美兎
   これがバーチャルユーチューバーなんだよなぁ…。
//}


=== 図表
LaTeXではクッソ長いコマンドを打つ図の挿入です。
Re:VIEWでは、@<tt>{//image}で本文横幅に占める割合などを指定しつつ配置、@<tt>{@}@<tt>{<img>{\}}で参照できます。
具体的には、次のとおりです。
//emlist{
レンジでチンする際のポンチ絵を@<tt>{@}<img>{識別子}に示す．
//image[識別子][キャプション][scale=0.5]
//}

画像パスは、原稿（@<tt>{hoge.re}）と同じ階層の@<tt>{images}ディレクトリ内@<tt>{識別子.拡張子}が用いられます。
拡張子には優先順位があり、@<tt>{pdf}、@<tt>{png}、@<tt>{jpg}の順@<fn>{desk}です。
もし識別子が同じであれば、拡張子の優先順位が高い画像から採用されます。
//footnote[desk][desk側の都合で、これ以外の拡張子は利用不可です。大文字や@<tt>{jpeg}も不可です。]

@<tt>{//}@<tt>{indepimage[識別子]}を使えば、採番なし・キャプション省略可な画像を挿入できます。
例えば、スタンプのように画像を貼り付けるときに便利です。
//indepimage[ai]


また、図とくれば表です。
次のようにセルは1つ以上のTAB区切り、空白セルは@<tt>{.}、@<tt>{.}自体は@<tt>{..}として@<tt>{//table}で定義、@<tt>{@}@<tt>{<table>{\}}で参照できます。
//emlist{
データなら@<tt>{@}@<tt>{<table>{識別子\}}にあるよ．
 //table[識別子][キャプション]{
 foo    bar     hoge
 ----------------------
 A      .       B
 C      ..      D
 vimrc  .vimrc  ..vimrc
 //}
//}

具体的な出力は、@<table>{review-table}のとおりです。
//table[review-table][キャプション]{
foo	bar		hoge
----------------------
A		.		B
C		..		D
vimrc	.vimrc	..vimrc
//}
罫線はすべて引く、セルは左揃えで固定、そして結合も不可と非常に簡素です。
このため、deskではtabooular@<fn>{tabooular}構文による表をサポートしました。
ただ、その詳細をここに書くには余白が狭すぎるため、後述する「応用編」で述べます。
//footnote[tabooular][@<href>{https://github.com/lrks/tabooular}]


=== 数式
LaTeX記法が使えます。
まず、ディスプレイ数式モードは@<tt>{texequation}によって実現できます。
具体的には次のとおりです。
//emlist{
 //texequation{
  \frac{1}{5}\pi \times \mathrm{det}\bm{A}
  = \frac{1}{5}\pi \times |\bm{A}|
  = \frac{1}{5}\pi \times \left|
    \begin{array}{cc}
    3 & 2 \\
    2 & 2
    \end{array}
  \right|
  = \frac{2}{5}\pi
  = 72^\circ
 //}
//}
また、インライン数式も@<tt>{@}@<tt>{<m>{x = 114 + 514\}}という感じで実現できます。

これらの内部はRe:VIEWと隔離され、LaTeXによってそのまま処理されます@<fn>{imgmath}。
それゆえに、式を採番し、それを本文で参照することは困難です。
少し面倒かも知れませんが、@<tt>{\tag{\}}で手動採番、それを手動参照することになるでしょう。
//footnote[imgmath][EPUBの出力であっても、一度LaTeXで処理し画像として挿入する設定をしています。]

なお、@<tt>{@}@<tt>{<m>{2^{64\}\}}など、@<tt>{@}@<tt>{<m>{\}}の中で@<tt>{\}}を使いたくなることがあるでしょう。
ただ、このままではインライン命令の終了とみなされてしまいます。
これを避けるには、@<tt>{\}}だけは@<tt>|\}|としてエスケープすることが必要です。
とはいえ、実はdeskでは謎の技術によって数式内の自動エスケープを実現しており、さほど気にしなくて済みます。
さらに、2017年11月にリリースされたRe:VIEW 2.4から@<em>{フェンス記法}が登場しました。
これは、従来の@<tt>{{}や@<tt>{\}}の代わりに@<tt>{|}または@<tt>{$}を使う記法です。
ドキュメントによれば、推奨する記法ではない@<fn>{metoo}とのことですが、この記法を使えば数式も書きやすくなることでしょう。
//footnote[metoo][何か起こりそうで心配なため、deskの場合でも推奨しません。どうしても既存の記法ではエラーになる場合だけの使用にとどめておいて欲しいという気持ちです。]


== 応用編
執筆に不可欠とまではいえないものの、より高度な表現に必要な文法を紹介します。

=== 脚注
脚注です。
LaTeXとは異なり、常に@<tt>{\footnotemark}と@<tt>{\footnotetext}を使うスタイルになります。
こんな感じです。
//emlist{
deskでは、footnoteではなくmarginpar@<tt>{@}<fn>{識別子}なんだけど…。
//footnote[識別子][傍注のこと。そのための領域を確保して組版している。]
//}

{ }と[ ]の使い分け、LaTeXの@<tt>{\footnote}という1つのバックスラッシュを使う記法と
@<tt>{//footnote}という2つのスラッシュを使うという記法の混同には気をつける必要があります。

なおLaTeXにおいて、本文横のような幅が狭いところに文字を出力した場合、改行がうまく制御できず見栄えが悪くなることがあります。
これを避けるため、deskでは@<tt>{@}@<tt>{seqsplit}命令を用意しました。
この命令に入力された文字列は、LaTeXのハイフネーションを無視して出力されます。


=== ルビ・傍点
まず、ルビは@<tt>{@}@<tt>{<ruby>{親文字, ルビ\}}で実現できます。
このLaTeX出力では、okumacroが提供する命令が用いられます@<fn>{ruby}。
//footnote[ruby][より正確に言えば、okumacroで定義された\ruby{}命令に適合するコードを吐きます。]

deskでは、より高度なルビ機能を提供するPXrubricaパッケージを利用します。
とはいえ、Re:VIEWの文法上はほぼ同じで、@<ruby>{電撃文庫, でん|げき|ぶん|こ}など親文字が複数あるときにルビを@<tt>{|}で区切れる機能が追加されただけです。
1文字のときや@<ruby>{禁書目録, インデックス}のように区切れないときは従来どおりで何も変わりません。@<tt>{|}で区切れたはずなのに人間が間違えて区切らなかった場合は、従来どおりの出力になります。
具体的な記述は次のとおりです。
//emlist{
@<tt>{@}<ruby>{霞, かすみ}
@<tt>{@}<ruby>{拝承, はい|しょう}
@<tt>{@}<ruby>{○○○○感謝, おかえりなさい}
@<tt>{@}<ruby>{Re:VIEW, レビュー}
//}
なお、PXrubricaではルビの前後が和文か欧文かによって適切なパラメータを与えることができます。
しかし、ここでは記述を簡単にするために、あえてパラメータ指定を省いています。
@<tt>{build.rb}や@<tt>{extensions/}で何とかできそうな気もしますが…。

さらに、このルビ機能は、内部的に@<bou>{傍点}をつける際にも利用されています。
これは、@<tt>{@}@<tt>{<bou>{ほげほげ\}}とすることで利用可能です。

=== ハイパーリンク
@<tt>{@}@<tt>{<href>{URI\}}で、リンクも使えます。
URIのほかに名前も指定できますが、紙面への掲載を考えると避けたほうが無難でしょう。
具体的にはこんな感じです。
//emlist{
@<tt>{@}<href>{https://sigcoww.herokuapp.com/}
//}

なおdesk特有、またLaTeX出力のみの機能として、QRコードの出力を用意しました。
@<tt>{@}@<tt>{<qrcode>{URI\}}として、URIをQRコードにした画像が出力されます。
傍注への出力を想定しており、@<tt>{<href>{\}}と合わせてこんな感じ@<fn>{qrcode}になります。
//footnote[qrcode][@<href>{https://sigcoww.org/}のQRコードは↓だよー。@<qrcode>{https://sigcoww.org/}これ↑だよー。]


=== 絵文字
desk特有の機能として、絵文字@<emoji>{sushi}が出力できます。
記述@<emoji>{notebook}は、@<tt>{@}@<tt>{<emoji>{エイリアス\}}です。
エイリアス@<emoji>{alien}は、gemoji@<fn>{gemoji}、つまりGitHubのリストを基としています。
ただし、例外@<emoji>{boom}として@<tt>{:thinking_face:}@<emoji>{thinking_face}のみ@<tt>{:thinking:}@<emoji>{thinking}と同じ扱いにしています。
また、バックエンド@<emoji>{back}はBXcoloremoji@<fn>{bxcoloremoji}で、Unicode Emoji v11.0の絵文字が出力できます。
//footnote[gemoji][@<href>{https://github.com/github/gemoji}]
//footnote[bxcoloremoji][@<href>{https://github.com/zr-tex8r/BXcoloremoji}]

なお、登録されていない絵文字@<emoji>{sos}は前後に@<tt>{:}が付いた状態で、エイリアスがそのまま出力されます。
毎々お世話になります。首記の件、@<emoji>{haisyo}お願いしたく。調整乞う。


=== 特殊文字
Re:VIEWはLaTeXの処理系としてuplatexを用いているため、あまり特殊文字を意識する必要はありません。
しかし、16進4桁のUnicode番号を指定して出力するための@<tt>{@}@<tt>{<uchar>{xxxx\}}という命令が用意されています。

ここでは「まぁ滅多に使わないですね」と書こうと思っていました。
しかし、過去に@<uchar>{25CB}が素直に@<ruby>{○○,で}ないという問題が発生していたのです。
そのため、@<tt>{@}@<tt>{<uchar>{25CB\}}とタイプしていました。
この原因は、欧文と和文の扱いを間違えたためでしたが、こういった問題の回避にも使える！ということです。


=== クソデカ文字
なにか感情が昂ぶったとき、それを文字にして伝えるにはどうしたらよいでしょうか。
そうですね、@<tt>{@}@<tt>{<kusodeka>{\}}で伝えましょう。
@<kusodeka>{こんな感じで！}
いい感じですね。

=== コードブロック
ソースコードを貼り付けるアレです。
採番の有無、行番号の有無で命令が異なります。
こんな感じです。
//list[id0][採番あり・行番号なし]{
 //list[識別子][キャプション]{
 puts "現在の時刻は #{Time.now()} です。"
 //}
//}
//emlist[採番なし・行番号なし]{
 //emlist[キャプション（省略可能）]{
 puts "現在の時刻は #{Time.now()} です。"
 //}
//}
//listnum[id1][採番あり・行番号あり]{
 //listnum[識別子][キャプション]{
 puts "現在の時刻は #{Time.now()} です。"
 //}
//}
//emlistnum[採番なし・行番号あり]{
 //emlistnum[キャプション（省略可能）]{
 puts "現在の時刻は #{Time.now()} です。"
 //}
//}

さらに、シェルとその実行結果を示すことに使えそうなブロックがあります。
//cmd{
 //cmd[キャプション（省略可能）]{
 $ whoami
 hogehoge
//}

なお、desk特有の命令として、これらの名前に@<tt>{w}を付けた命令があります。
大事なことなのでなのでもう一回。
@<kusodeka>{名前にwを付けた命令があります。}
これらは、本文のみならず傍注の領域まで出っ張ってブロックを配置する命令です。
そこそこ使うかもしれません。

また、Re:VIEWには@<tt>{//memo}や@<tt>{//info}、@<tt>{//tip}といったブロックが備わっています。
ドキュメント曰く、「コラムにするほどではないけれども本文から独立したちょっとした記事」を入れるらしいです。
本来の見た目は、先ほどまでの@<tt>{//emlist}系と大差ありません。
一方、deskでは@<tt>{//tip}の実装を修正、float環境でページ上下へ出力することにしました。
実際の出力は、@<chap>{sample}にあります。


=== 図
desk特有ですが、実は図にも@<tt>{//imagew}という@<tt>{w}な命令が存在します。
スケールの指定が普段なら本文横幅に対する一方、@<tt>{w}版では「本文+傍注」横幅になりますが、参照はいずれも@<tt>{@}@<tt>{<img>{識別子\}}で行えます。

なお、画像そのものについて、deskを利用するといくつかの前処理が行われます@<fn>{origin}。
具体的には、メタデータの削除（JPEG）、余白除去（PDF/PNG）、非透過化（PDF/PNG）、さらにEPUBへの出力ではPDFからPNGへの変換が実施されます@<fn>{epub}。
//footnote[origin][元データは維持されます。]
//footnote[epub][すでに存在するPNGは利用されません。]

ちなみに、PDF/PNG/JPEGの使い分けですが、
「構成図」のように自分で図形を配置しながら作った画像、特にベクターデータで構成された画像はPDF、イラストソフトやスクリーンショットのように何か他の手段によってラスタライズされた画像はPNG、実写の写真はJPEGをおすすめします。
重要なのでまとめます。
@<kusodeka>{大体PDF、スクショはPNG、写真はJPEG}
です。
また、PNG/JPEGの場合の解像度は350dpi以上、例えば横いっぱいに貼り付けたい場合は幅1600px以上の画像を推奨します。
なお、PDFを@<bou>{画像}として扱うことに違和感があるかも知れませんが、作成と出力はInkscapeで可能なのでぜひ利用してもらえたらと思います。
過去にPowerPointや何らかの作図ツールで作られたPDF画像がある場合、Inkscapeで読み込んで加工することも可能です。

さて命令の話に戻って、これもdesk特有ですが@<tt>{//subfig}および@<tt>{w}版の@<tt>{//subfigw}命令を追加しました。
この中にいくつかの@<tt>{//image}、また改段落のために改行を入れつつ機能させます。
具体的にはこんな感じです。
//emlist{
 //subfig[キャプション]{
 //image[識別子A][キャプションA][scale=0.4]
 //image[識別子B][キャプションB][scale=0.4]

 //image[識別子C][キャプションC][scale=1]
 //}
//}

ただし、Re:VIEW中から参照できるのは@<tt>{//image}の画像のみであり、全体の参照はできません。
また、EPUBの出力はそれぞれが普通の図として出力されます。
そのため、文中での「右の図」や「左の図」といった表現は配慮を欠いてしまう恐れがあります。


=== 表
標準の表には@<tt>{w}な命令を追加しませんでした。
異なる表マークアップとして、tabooular@<fn>{tabooular2}をdeskで提供したためです。
//footnote[tabooular2][@<href>{https://github.com/lrks/tabooular}]

tabooularでは、セルの結合や文字揃えをそこそこ直感的な記述で実現します。
サンプルやオンラインデモ@<fn>{demo}もありますが、一例を示すとこんな感じです。
@<table>{tabooular-table}という感じで出力されます。
//emlistw{
 //tabooular[識別子][キャプション]{
 ; セミコロン以降はコメント
 GID  | Name   & Age & Gender  ; ヘッダ。中央揃えになる。
 =====|<======= ====>&======== ; 本体との境界。<=>で揃え方、|で縦罫線、空白or&で列を設定
 01   | Sato   & 12  & Male    ; |or&でセルを区切る。2つは同等に扱われる。
 02 \ | Suzuki & 24  & Female  ; \ で続けることで、縦連結になる
      | Miura  & >> NODATA <<  ; 横連結。>>の数は連結数、方向は揃え方。
 ----------------------------  ; ハイフンが3つより多ければ横罫線を引く
 03 \ | > Y >  & << NO     \   ; 揃え方を一時的に変えることもできる
      | < X >  & DATA     <<   ; 縦横同時連結もできる
 //}
//}
//footnote[demo][@<href>{https://lrks.github.io/tabooular/}]
//tabooular[tabooular-table][tabooular 出力例]{
; セミコロン以降はコメント
GID  | Name   & Age & Gender  ; ヘッダ。中央揃えになる。
=====|<======= ====>&======== ; 本体との境界。<=>で揃え方、|で線、空白か&で列を指定
01   | Sato   & 12  & Male    ; |か&でセルを区切る。2つは同等に扱われる。
02 \ | Suzuki & 24  & Female  ; \ で続けることで、縦連結になる
     | Miura  & >> NODATA <<  ; 横連結。>>の数は連結数、方向は揃え方。
----------------------------  ; ハイフンが3つより多ければ横罫線を引く
03 \ | > Y >  & << NO     \   ; 揃え方を一時的に変えることもできる
     | < X >  & DATA     <<   ; 縦横同時連結もできる
//}

tabooularには、@<tt>{w}な命令もあります。
そして、いずれの場合も参照は従来どおり@<tt>{@}@<tt>{<table>{\}}で可能です。

=== Markdown
これもdesk特有の機能ですが、libsoldout@<fn>{libsoldout}のmkd2latexやmkd2htmlを動かすブロック命令を追加しています。
こんな感じです。
//emlist{
 //markdown{
 1. これは
     * Markdown
     * です
 2. 出力は
     * LaTeXまたはHTMLで適切に行われます
 //}
//}
//footnote[libsoldout][@<href>{https://github.com/faelys/libsoldout}]

中身はRe:VIEW側から隔離されます。
どんなコードが吐き出されるか不明なので、少し怖い気もします。

=== 著者紹介
deskでは、著者紹介のページを@<tt>{profile.re}として勝手に作成します。
そこに表示される内容を設定するため、@<tt>{@}@<tt>{<author>{\}}と@<tt>{//}@<tt>{profile}という2つの命令を実装しました。

@<tt>|@<author>{}|は、文章の著者名を設定する命令です。
著者紹介ページのほか、各記事の見出しにも出力されます。
この命令はファイル内のどこに配置しても構いませんが、複数あった場合は先頭のみ有効です。
中身を「@<tt>{,}」で区切る@<fn>{split}と、前方は肩書、後方を著者名として処理します。
//footnote[split][「@<tt>{,}」の検索は文字列末尾から、そして最初に発見した「@<tt>{,}」で分割します。]

さらに、その著者名を「@<tt>{;}」で分け「@<tt>{キー:値}」と続けると付加情報が設定できます。
現時点では「@<tt>{著者名;twitter:アカウント名}」とすることで、twitterのアカウントを設定できます。
LaTeXの場合、@<tt>{src/layouts/アカウント名.png}の画像@<fn>{zettaipng}をアイコンとしても設定します。
//footnote[zettaipng][拡張子は@<tt>{.png}のみです。]

また、@<tt>{//profile}は、著者紹介文を設定するブロック命令です。
これもファイル内のどこに配置しても構いません。
これらの具体的な例は、次のとおりです。
//emlist{
 @<tt>{@}<author>{手酢斗 太郎}
 //profile{
 はいどーも！バーチャルYouTubeｒのげんげんです。
 //}
//}

なお、内部的には@<tt>{//profile}の第一引数は著者名、第二引数には記事タイトルが設定されます。
明示的に設定することで、@<tt>{profile.re}に掲載される情報の上書きが可能です。

//profile{
バーチャルユーチューバーです。
//}


=== アイキャッチ
LaTeXのみですが、ページ数調整の目的で@<tt>{//eyecatch}命令を用意しました。
第1引数に@<tt>{high}・@<tt>{mid}・@<tt>{low}・@<tt>{urgent}をとり、ブロックの内容をそれらしい感じに出力します。
この内容はLaTeX文書にそのまま出力されます。
実際の出力は次のページです。

//eyecatch[low]{
今期は、高梨ミーシャさん、舘島虎徹さん、バスケ先輩、秋常紺さん、永見涼花さん、江坂さん、ボラーちゃんくんさん、
水野愛さん、空町春さん、ソフィー・トワイライトさん、夏木ひなたさん、倉井朔夜さん、青木夕さん、小糸侑さんが可愛い。%
{\leaders\hbox{--}\hfill\kern0pt}\hspace{.5zw}あるオタク
//}
